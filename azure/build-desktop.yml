parameters:
- name: target
  type: string

steps:
  # Build the flutter app
  - task: FlutterBuild@0
    inputs:
      target: ${{parameters.target}}
      projectDirectory: './tms'
      extraArgs: '--release'

  # - task: FlutterCommand@0
  #   condition: eq( variables['Agent.OS'], 'Windows_NT' )
  #   inputs:
  #     projectDirectory: './tms'
  #     arguments: 'pub run msix:create'

  # Archive windows
  - task: ArchiveFiles@2
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    inputs:
      rootFolderOrFile: './tms/build/${{parameters.target}}/runner/Release'
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/tms-client-${{parameters.target}}.zip'

  # Linux archive
  - task: ArchiveFiles@2
    condition: eq( variables['Agent.OS'], 'Linux' )
    inputs:
      rootFolderOrFile: './tms/build/${{parameters.target}}/x64/release/bundle'
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/tms-client-${{parameters.target}}.zip'

  # Macos archive
  - task: ArchiveFiles@2
    condition: eq( variables['Agent.OS'], 'Darwin' )
    inputs:
      rootFolderOrFile: './tms/build/${{parameters.target}}/Build/Products/Release'
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/tms-client-${{parameters.target}}.zip'

  # Archive server, same for all platforms.
  - task: CopyFiles@2
    inputs:
      Contents: './server/target/release/?(tms_server|tms_server.exe)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/tms-server-${{parameters.target}}'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: 'tms-${{parameters.target}}'
