jobs:
- job: AIO_Docker
  pool:
    vmImage: ubuntu-latest
  steps:
    - template: './azure/pre-steps.yml'
    - script: |
        sudo apt-get update && sudo apt-get install -qq -y musl-tools musl-dev
    - task: Cargo@1
      inputs:
        cargoCommand: 'build --release --target x86_64-unknown-linux-musl'
        cargoWorkingDir: './server'
        verbose: false
    - task: FlutterBuild@0
      inputs:
        target: 'web'
        projectDirectory: './tms'

    - task: CopyFiles@2
      inputs:
        sourceFolder: './server/target/x86_64-unknown-linux-musl/release/tms_server'
        targetFolder: '$(Build.ArtifactStagingDirectory)'

    # Build docker image
    - task: CmdLine@2
      inputs:
        script: 'docker-compose build --pull'

    # Publish docker image
    - task: CmdLine@2
      condition: and(succeeded(), eq(variables.isPublishable, 'true'))
      inputs:
        script: 'docker login -u cjbuchel -p $(TMS-TOKEN); docker-compose push; docker logout'

    # Publish github release
    - template: './azure/github-release.yml'
      parameters:
        version: ${{variables.version}}

- job: CrossCI
  strategy: 
    matrix: 

      # Desktops
      windows:
        imageName: 'windows-2019'
        flutter-target: 'windows'
        mobile: false
      macos:
        imageName: 'macOs-12'
        flutter-target: 'macos'
        mobile: false
      linux:
        imageName: 'ubuntu-22.04'
        flutter-target: 'linux'
        mobile: false

      # Mobiles
      mobile:
        imageName: 'macOs-12'
        flutter-target: 'mobile'
        mobile: true
  pool:
    vmImage: $(imageName)
  steps:
    - template: './azure/pre-steps.yml'
    - script: |
        sudo apt-get install -qq -y clang ninja-build libgtk-3-dev
      condition: eq( variables['Agent.OS'], 'Linux' )
    - task: FlutterBuild@0
      inputs:
        target: $(flutter-target)
        projectDirectory: './tms'
        iosCodesign: false

    - task: Cargo@1
      inputs:
        cargoCommand: 'build --release'
        cargoWorkingDir: './server'
        verbose: false
    
    - task: CopyFiles@2
      inputs:
        sourceFolder: './tms/build/$(flutter-target)/x64/release/bundle'
        targetFolder: '$(Build.ArtifactStagingDirectory)'
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: $(flutter-target)-client