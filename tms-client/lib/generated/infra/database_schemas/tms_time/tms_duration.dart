// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.4.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `normalize`

class TmsDuration {
  final PlatformInt64? years;
  final PlatformInt64? months;
  final PlatformInt64? days;
  final PlatformInt64? hours;
  final PlatformInt64? minutes;
  final PlatformInt64? seconds;

  const TmsDuration.raw({
    this.years,
    this.months,
    this.days,
    this.hours,
    this.minutes,
    this.seconds,
  });

  TmsDuration difference({required TmsDuration other}) =>
      TmsRustLib.instance.api
          .crateInfraDatabaseSchemasTmsTimeTmsDurationTmsDurationDifference(
              that: this, other: other);

  PlatformInt64 inDays() => TmsRustLib.instance.api
          .crateInfraDatabaseSchemasTmsTimeTmsDurationTmsDurationInDays(
        that: this,
      );

  PlatformInt64 inHours() => TmsRustLib.instance.api
          .crateInfraDatabaseSchemasTmsTimeTmsDurationTmsDurationInHours(
        that: this,
      );

  PlatformInt64 inMinutes() => TmsRustLib.instance.api
          .crateInfraDatabaseSchemasTmsTimeTmsDurationTmsDurationInMinutes(
        that: this,
      );

  PlatformInt64 inMonths() => TmsRustLib.instance.api
          .crateInfraDatabaseSchemasTmsTimeTmsDurationTmsDurationInMonths(
        that: this,
      );

  PlatformInt64 inSeconds() => TmsRustLib.instance.api
          .crateInfraDatabaseSchemasTmsTimeTmsDurationTmsDurationInSeconds(
        that: this,
      );

  PlatformInt64 inYears() => TmsRustLib.instance.api
          .crateInfraDatabaseSchemasTmsTimeTmsDurationTmsDurationInYears(
        that: this,
      );

  factory TmsDuration(
          {PlatformInt64? years,
          PlatformInt64? months,
          PlatformInt64? days,
          PlatformInt64? hours,
          PlatformInt64? minutes,
          PlatformInt64? seconds}) =>
      TmsRustLib.instance.api
          .crateInfraDatabaseSchemasTmsTimeTmsDurationTmsDurationNew(
              years: years,
              months: months,
              days: days,
              hours: hours,
              minutes: minutes,
              seconds: seconds);

  @override
  int get hashCode =>
      years.hashCode ^
      months.hashCode ^
      days.hashCode ^
      hours.hashCode ^
      minutes.hashCode ^
      seconds.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is TmsDuration &&
          runtimeType == other.runtimeType &&
          years == other.years &&
          months == other.months &&
          days == other.days &&
          hours == other.hours &&
          minutes == other.minutes &&
          seconds == other.seconds;
}
