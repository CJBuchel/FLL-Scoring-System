// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import '../../infra.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `default`, `default`

class LoginRequest {
  final String username;
  final String password;

  const LoginRequest({
    required this.username,
    required this.password,
  });

  static LoginRequest fromJsonString({required String json}) => RustLib
      .instance.api
      .crateInfraNetworkSchemasLoginRequestsLoginRequestFromJsonString(
          json: json);

  String toJsonString() => RustLib.instance.api
          .crateInfraNetworkSchemasLoginRequestsLoginRequestToJsonString(
        that: this,
      );

  static String toSchema() => RustLib.instance.api
      .crateInfraNetworkSchemasLoginRequestsLoginRequestToSchema();

  @override
  int get hashCode => username.hashCode ^ password.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is LoginRequest &&
          runtimeType == other.runtimeType &&
          username == other.username &&
          password == other.password;
}

class LoginResponse {
  final List<TmsTreeRole> roles;

  const LoginResponse({
    required this.roles,
  });

  static LoginResponse fromJsonString({required String json}) =>
      RustLib.instance.api
          .crateInfraNetworkSchemasLoginRequestsLoginResponseFromJsonString(
              json: json);

  String toJsonString() => RustLib.instance.api
          .crateInfraNetworkSchemasLoginRequestsLoginResponseToJsonString(
        that: this,
      );

  static String toSchema() => RustLib.instance.api
      .crateInfraNetworkSchemasLoginRequestsLoginResponseToSchema();

  @override
  int get hashCode => roles.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is LoginResponse &&
          runtimeType == other.runtimeType &&
          roles == other.roles;
}
