parameters:
- name: target

steps:
  # replace msix_version: 0.0.0.0 with msix_version: $(version).$(Build.BuildNumber) in pubspec.yaml
  - powershell: |
      $versionPrefix = "$(version)"
      $newMsixVersion = "$versionPrefix.0" # Set revision number to 0
      (Get-Content -Path 'client\pubspec.yaml') -replace 'msix_version: \d+\.\d+\.\d+\.\d+', "msix_version: $newMsixVersion" | Set-Content -Path 'client\pubspec.yaml'
      Get-Content -Path 'client\pubspec.yaml' | ForEach-Object { Write-Host $_ }
    displayName: 'Update MSIX Version in pubspec.yaml and print it'
    condition: eq(variables['Agent.OS'], 'Windows_NT')

  # replace version for regular flutter apps
  - bash: |
      version_number="$(version)"
      build_number=$(echo "$(Build.BuildNumber)" | awk -F. '{print $NF}') # Extracts the last number after the dot
      sed -i "s/version: [0-9]\+\.[0-9]\+\.[0-9]\++[0-9]\+/version: $version_number+$build_number/" client/pubspec.yaml
      cat client/pubspec.yaml
    displayName: 'Update version in pubspec.yaml and print it'
    condition: ne(variables['Agent.OS'], 'Windows_NT')

  # install the msix package for windows
  - task: FlutterCommand@0
    displayName: 'Install MSIX Package'
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    inputs:
      projectDirectory: './client'
      arguments: 'pub add --dev msix'

  # Build flutter app (for web)
  - task: FlutterBuild@0
    displayName: "Build Flutter Web (NO CDN)"
    condition: eq( ${{parameters.target}}, 'web' )
    inputs:
      target: '${{parameters.target}}'
      projectDirectory: './client'
      debugMode: false
      profileMode: false
      iosCodesign: false
      extraArgs: '--release --no-web-resources-cdn'

      # build
      buildName: $(version) # replace with actual version
      buildNumber: $(Build.BuildNumber) # auto increment

   # Build flutter app (for app)
  - task: FlutterBuild@0
    displayName: "Build Flutter App: ${{parameters.target}}"
    condition: ne( ${{parameters.target}}, 'web' )
    inputs:
      target: '${{parameters.target}}'
      projectDirectory: './client'
      debugMode: false
      profileMode: false
      iosCodesign: false
      extraArgs: '--release'

      # build
      buildName: $(version) # replace with actual version
      buildNumber: $(Build.BuildNumber) # auto increment

  # create the msix package for windows
  - task: FlutterCommand@0
    displayName: 'Create MSIX Package'
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    inputs:
      projectDirectory: './client'
      arguments: 'pub run msix:create --build-windows false'