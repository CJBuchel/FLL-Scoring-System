steps:
  - task: InstallAppleCertificate@2
    displayName: "Install Apple Certificate"
    inputs:
      certSecureFile: '$(p12_alias)'
      certPwd: '$(cert_pass)'
      keychain: 'temp'
      deleteCert: true

  - task: InstallAppleProvisioningProfile@1
    displayName: "Install Provisioning Profile"
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: '$(pp_alias)'
      removeProfile: true

  # Build the flutter app
  - task: FlutterBuild@0
    displayName: "Build Flutter App for IOS"
    inputs:
      target: 'ios'
      projectDirectory: './client'
      debugMode: false
      profileMode: false
      iosCodesign: false
      extraArgs: '--release'


  # build the xcode project
  - task: Xcode@5
    displayName: "Build the IOS app"
    inputs:
      actions: 'archive'
      configuration: 'release'
      sdk: 'iphoneos'
      xcWorkspacePath: './client/ios/Runner.xcworkspace'
      scheme: 'Runner'
      packageApp: false # just build don't generate ipa
      archivePath: 'client/ios/Runner.xcarchive'
      # args: '-UseModernBuildSystem=YES'

  # Generate the exportOptions.plist
  - script: |
      # Define paths
      ARCHIVE_PATH="$(Build.ArtifactStagingDirectory)/Runner.xcarchive"
      EXPORT_PATH="$(Build.ArtifactStagingDirectory)/ExportedApp"
      EXPORT_OPTIONS_PLIST="$(Build.ArtifactStagingDirectory)/exportOptions.plist"

      # Create the exportOptions.plist for signing
      cat > $EXPORT_OPTIONS_PLIST <<EOF
      <?xml version="1.0" encoding="UTF-8"?>
      <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
      <plist version="1.0">
      <dict>
          <key>method</key>
          <string>app-store</string>
          <key>teamID</key>
          <string>B2B876ZH94</string>
          <key>signingCertificate</key>
          <string>$(APPLE_CERTIFICATE_SIGNING_IDENTITY)</string>
          <key>provisioningProfiles</key>
          <dict>
              <key>a.loose.screw.tms</key>
              <string>$(APPLE_PROV_PROFILE_UUID)</string>
          </dict>
      </dict>
      </plist>
      EOF
    displayName: 'Generate the exportOptions.plist'

  - task: Xcode@5
    displayName: "Generate the IPA"
    inputs:
      actions: 'exportArchive'
      archivePath: '$(Build.ArtifactStagingDirectory)/Runner.xcarchive'
      exportPath: '$(Build.ArtifactStagingDirectory)/ExportedApp'
      exportOptionsPlist: '$(Build.ArtifactStagingDirectory)/exportOptions.plist'
      # args: '-UseModernBuildSystem=YES'

  - task: CopyFiles@2
    displayName: "Copy IPA to Artifact Staging Directory"
    inputs:
      contents: '**/*.ipa'
      targetFolder: $(Build.ArtifactStagingDirectory)
      flattenFolders: true

  - task: PublishPipelineArtifact@1
    displayName: "Publish IPA Artifact"
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'client-ios'