parameters:
  - name: artifactName
    type: string
    default: 'artifacts'
  - name: shouldArchive
    type: boolean
    default: false
  - name: archiveType
    type: string
    default: 'zip'
    values:
      - 'zip'
      - 'tar'
  - name: tarCompression
    type: string
    default: 'gz'
  - name: archiveFile
    type: string
    default: 'artifacts.tar.gz'

steps:
  - task: ArchiveFiles@2
    displayName: 'Archive ${{ parameters.artifactName }}'
    condition: eq('${{ parameters.shouldArchive }}', true)
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
      includeRootFolder: false
      replaceExistingArchive: true
      archiveType: ${{ parameters.archiveType }}
      tarCompression: ${{ parameters.tarCompression }}
      archiveFile: '$(Build.ArtifactStagingDirectory)/${{ parameters.archiveFile }}'

  # list dir only when it's linux
  - script: 'ls -la $(Build.ArtifactStagingDirectory)'
    displayName: 'List Archive Contents'
    # condition when it's linux
    condition: eq( variables['Agent.OS'], 'Linux')
  
  # only publish the archive if it was created
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Archive ${{ parameters.artifactName }}'
    condition: eq('${{ parameters.shouldArchive }}', true)
    inputs:
      PathToPublish: '$(Build.ArtifactStagingDirectory)/${{ parameters.archiveFile }}'
      ArtifactName: ${{ parameters.artifactName }}

  - task: PublishBuildArtifacts@1
    displayName: 'Publish ${{ parameters.artifactName }}'
    condition: ne('${{ parameters.shouldArchive }}', true)
    inputs:
      PathToPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: ${{ parameters.artifactName }}