parameters:
  - name: target
    type: string
    default: 'web'
    values:
      - 'ios'
      - 'web'
      - 'apk'

#
# This file contains the steps to generate the Dart code from the Rust code.
#
steps:
  # run the codegen
  # - script: flutter_rust_bridge_codegen generate --dart-entrypoint-class-name TmsRustLib --rust-input crate::infra --rust-root $(Build.SourcesDirectory)/tms_infra --dart-output $(Build.SourcesDirectory)/tms_client/lib/generated
  - script: |
      cd tms_client
      flutter_rust_bridge_codegen generate
    displayName: 'Run Rust to Dart Codegen'

  # run flutter code gen (freezed)
  - script: |
      cd tms_client
      flutter pub run build_runner build --delete-conflicting-outputs
    displayName: 'Run Flutter (Freezed) Codegen'

  # run the wasm codegen
  - ${{ if eq(parameters.target, 'web') }}:
    - script: |
        cd tms_client
        dart run flutter_rust_bridge build-web --dart-root $(Build.SourcesDirectory)/tms_client --rust-root $(Build.SourcesDirectory)/tms_infra
      displayName: 'Run Wasm Codegen'

  # run android code gen
  - ${{ if eq(parameters.target, 'apk') }}:
    - script: |
        cd tms_infra
        cargo ndk -o $(Build.SourcesDirectory)/tms_client/android/app/src/main/jniLibs build
      displayName: 'Run Android Codegen'
  
  # run ios code gen
  # - ${{ if eq(parameters.target, 'ios') }}:
  #   - script: |
  #       cd tms_infra
  #       perl -pi -e 's/"cdylib"/"staticlib"/g' Cargo.toml
  #       cat Cargo.toml
  #       cargo build --release --target aarch64-apple-ios
  #       cp ../target/aarch64-apple-ios/release/libtms_infra.a $(Build.SourcesDirectory)/tms_client/ios/Runner
  #     displayName: 'Run iOS Codegen'