parameters:
  - name: cargoPath
    type: string
    default: $(HOME)/.cargo
  - name: rustupPath
    type: string
    default: $(HOME)/.rustup

# 
# Caching for Rust dependencies and build artifacts.
# 
steps:
  - task: Cache@2
    inputs:
      key: 'cargo-registry | "$(Agent.OS)" | $(Build.SourcesDirectory)/Cargo.lock | $(Agent.JobName)'
      restoreKeys: 'cargo-registry | "$(Agent.OS)" | $(Agent.JobName)'
      path: ${{ parameters.cargoPath }}/registry
    displayName: 'Cache Cargo Registry'

  - task: Cache@2
    inputs:
      key: 'cargo-bin | "$(Agent.OS)" | $(Build.SourcesDirectory)/Cargo.lock | $(Agent.JobName)'
      restoreKeys: 'cargo-bin | "$(Agent.OS)" | $(Agent.JobName)'
      path: ${{ parameters.cargoPath }}/bin
    displayName: 'Cache Cargo Bin'

  - task: Cache@2
    inputs:
      key: 'rust-toolchain | "$(Agent.OS)" | $(rustc -V) | $(Agent.JobName)'
      restoreKeys: 'rust-toolchain | "$(Agent.OS)" | $(Agent.JobName)'
      path: ${{ parameters.rustupPath }}/toolchains
    displayName: 'Cache Rust Toolchain'

  # Cache Cargo build
  - task: Cache@2
    inputs:
      key: 'cargo-build | "$(Agent.OS)" | $(Build.SourcesDirectory)/Cargo.lock | $(Agent.JobName)'
      restoreKeys: 'cargo-build | "$(Agent.OS)" | $(Agent.JobName)'
      path: $(Build.SourcesDirectory)/target
    displayName: 'Cache Cargo Build'
