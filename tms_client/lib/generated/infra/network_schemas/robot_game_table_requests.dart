// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.5.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `fmt`, `fmt`, `fmt`

class RobotGameTableInsertRequest {
  final String? tableId;
  final String table;

  const RobotGameTableInsertRequest({
    this.tableId,
    required this.table,
  });

  static Future<RobotGameTableInsertRequest> default_() => TmsRustLib
      .instance.api
      .crateInfraNetworkSchemasRobotGameTableRequestsRobotGameTableInsertRequestDefault();

  static RobotGameTableInsertRequest fromJsonString({required String json}) =>
      TmsRustLib.instance.api
          .crateInfraNetworkSchemasRobotGameTableRequestsRobotGameTableInsertRequestFromJsonString(
              json: json);

  String toJsonString() => TmsRustLib.instance.api
          .crateInfraNetworkSchemasRobotGameTableRequestsRobotGameTableInsertRequestToJsonString(
        that: this,
      );

  static String toSchema() => TmsRustLib.instance.api
      .crateInfraNetworkSchemasRobotGameTableRequestsRobotGameTableInsertRequestToSchema();

  @override
  int get hashCode => tableId.hashCode ^ table.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is RobotGameTableInsertRequest &&
          runtimeType == other.runtimeType &&
          tableId == other.tableId &&
          table == other.table;
}

class RobotGameTableRemoveRequest {
  final String tableId;

  const RobotGameTableRemoveRequest({
    required this.tableId,
  });

  static Future<RobotGameTableRemoveRequest> default_() => TmsRustLib
      .instance.api
      .crateInfraNetworkSchemasRobotGameTableRequestsRobotGameTableRemoveRequestDefault();

  static RobotGameTableRemoveRequest fromJsonString({required String json}) =>
      TmsRustLib.instance.api
          .crateInfraNetworkSchemasRobotGameTableRequestsRobotGameTableRemoveRequestFromJsonString(
              json: json);

  String toJsonString() => TmsRustLib.instance.api
          .crateInfraNetworkSchemasRobotGameTableRequestsRobotGameTableRemoveRequestToJsonString(
        that: this,
      );

  static String toSchema() => TmsRustLib.instance.api
      .crateInfraNetworkSchemasRobotGameTableRequestsRobotGameTableRemoveRequestToSchema();

  @override
  int get hashCode => tableId.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is RobotGameTableRemoveRequest &&
          runtimeType == other.runtimeType &&
          tableId == other.tableId;
}

class RobotGameTableSignalRequest {
  final String table;
  final String teamNumber;

  const RobotGameTableSignalRequest({
    required this.table,
    required this.teamNumber,
  });

  static Future<RobotGameTableSignalRequest> default_() => TmsRustLib
      .instance.api
      .crateInfraNetworkSchemasRobotGameTableRequestsRobotGameTableSignalRequestDefault();

  static RobotGameTableSignalRequest fromJsonString({required String json}) =>
      TmsRustLib.instance.api
          .crateInfraNetworkSchemasRobotGameTableRequestsRobotGameTableSignalRequestFromJsonString(
              json: json);

  String toJsonString() => TmsRustLib.instance.api
          .crateInfraNetworkSchemasRobotGameTableRequestsRobotGameTableSignalRequestToJsonString(
        that: this,
      );

  static String toSchema() => TmsRustLib.instance.api
      .crateInfraNetworkSchemasRobotGameTableRequestsRobotGameTableSignalRequestToSchema();

  @override
  int get hashCode => table.hashCode ^ teamNumber.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is RobotGameTableSignalRequest &&
          runtimeType == other.runtimeType &&
          table == other.table &&
          teamNumber == other.teamNumber;
}
